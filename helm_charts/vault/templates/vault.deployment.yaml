apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}-{{.Values.Vault.ComponentName}}
  labels:
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    component: {{.Values.Vault.ComponentName}}
    app: {{ template "name" . }}
spec:
  replicas: {{ .Values.Vault.Replicas }}
  template:
    metadata:
      labels:
        heritage: {{ .Release.Service }}
        release: {{ .Release.Name }}
        chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        component: {{.Values.Vault.ComponentName}}
        app: {{ template "name" . }}
    spec:
      serviceAccountName: {{ if .Values.rbac.create }}"{{ template "fullname" . }}-{{ .Values.rbac.ComponentName }}"{{ else }}"{{ .Values.rbac.ServiceAccountName }}"{{ end }}
      {{- if .Values.Vault.HostAliases }}
      hostAliases:
      {{- range .Values.Vault.HostAliases }}
      - ip: {{ .ip }}
        hostnames:
        {{- range .hostnames }}
        - {{ . }}
        {{- end }}
      {{- end }}
      {{- end }}
      containers:
      - name: {{ template "fullname" . }}-{{.Values.Vault.ComponentName}}
        image: "{{.Values.Vault.Image}}:{{.Values.Vault.ImageTag}}"
        imagePullPolicy: {{.Values.Vault.ImagePullPolicy}}
        command:
          - "docker-entrypoint.sh"
          - "server"
        env:
        - name: "VAULT_LOG_LEVEL"
          value: "{{.Values.Vault.LogLevel}}"
        - name: "VAULT_TLS_SERVER_NAME"
          value: "{{.Values.Vault.Tls.ServerName}}"
        {{- if .Values.Vault.AutoUnseal }}
        lifecycle:
          postStart:
            exec:
              command:
                - "/bin/sh"
                - "-ec"
                - |
                  chmod -R +x /post-start
                  /post-start/unseal-vault.sh {{ template "tls_skip_verify" . }}
        {{- end }}
        readinessProbe:
          httpGet:
            scheme: HTTPS
            path: /v1/sys/health?standbyok
            port: {{.Values.Vault.HttpPort}}
          initialDelaySeconds: 5
          periodSeconds: 5
        ports:
        - name: https
          containerPort: {{.Values.Vault.HttpPort}}
        - name: ha-forwarding
          containerPort: {{.Values.Vault.HaForwardingPort}}
        volumeMounts:
        - name: config
          mountPath: /vault/config
        - name: tls
          mountPath: /vault/tls
        - name: ca-consul
          mountPath: /etc/vault/consul-ca
        {{- if .Values.Vault.AutoUnseal }}
        - name: vault-keys
          mountPath: /etc/vault/keys
        - name: post-start
          mountPath: /post-start
        {{- end }}
        - name: consul-unix-socket
          mountPath: /consul-unix-socket
        {{- if .Values.Vault.HostAliases }}
        - name: nsswitch
          mountPath: /etc/nsswitch.conf
          subPath: nsswitch.conf
        {{- end }}          
        resources:
          limits:
            cpu: {{ .Values.Vault.Cpu }}
            memory: {{ .Values.Vault.Memory }}
          requests:
            cpu: {{ .Values.Vault.Cpu }}
            memory: {{ .Values.Vault.Memory }}
        securityContext:
          capabilities:
            add:
              - IPC_LOCK
      - name: {{ template "fullname" . }}-{{.Values.Vault.ConsulClient.ComponentName}}
        image: "{{.Values.Consul.Image}}:{{.Values.Consul.ImageTag}}"
        imagePullPolicy: "{{.Values.Consul.ImagePullPolicy}}"
        ports:
        - name: http
          containerPort: {{.Values.Consul.HttpPort}}
        - name: serflan-tcp
          protocol: "TCP"
          containerPort: {{.Values.Consul.SerflanPort}}
        - name: serflan-udp
          protocol: "UDP"
          containerPort: {{.Values.Consul.SerflanUdpPort}}
        - name: serfwan-tcp
          protocol: "TCP"
          containerPort: {{.Values.Consul.SerfwanPort}}
        - name: serfwan-udp
          protocol: "UDP"
          containerPort: {{.Values.Consul.SerfwanUdpPort}}
        - name: server
          containerPort: {{.Values.Consul.ServerPort}}
        - name: consuldns
          containerPort: {{.Values.Consul.ConsulDnsPort}}
        env:
        - name: INITIAL_CLUSTER_SIZE
          value: {{ .Values.Consul.Replicas | quote }}
        - name: STATEFULSET_NAME
          value: "{{ template "fullname" . }}-{{.Values.Consul.ComponentName}}"
        - name: STATEFULSET_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - name: consul-config
          mountPath: /consul/config
        - name: tls-consul
          mountPath: /consul/tls
          readOnly: true
        - name: ca-consul
          mountPath: /consul/ca
          readOnly: true
        - name: gossip-json
          mountPath: /consul/secrets
          readOnly: true
        - name: consul-unix-socket
          mountPath: /consul-unix-socket
        command:
          - "/bin/sh"
          - "-ec"
          - |
            docker-entrypoint.sh \
              consul \
              agent \
              -config-dir=/consul/config \
              -config-dir=/consul/secrets \
              -retry-join={{ template "fullname" . }}-{{.Values.Consul.ComponentName}}
      volumes:
      - name: config
        configMap:
          name: {{ template "fullname" . }}-{{.Values.Vault.ComponentName}}
          items:
          - key: config.json
            path: config.json
      - name: tls
        secret:
          secretName: {{ template "fullname" . }}.tls
      - name: ca-consul
        secret:
          secretName: {{ template "fullname" . }}-consul.ca
      - name: tls-consul
        secret:
          secretName: {{ template "fullname" . }}-consul.tls
      {{- if .Values.Vault.AutoUnseal }}
      - name: vault-keys
        secret:
          secretName: {{ template "fullname" . }}-keys
      - name: post-start
        configMap:
          name: {{ template "fullname" . }}-post-start
      {{- end }}
      - name: consul-config
        configMap:
          name: {{ template "fullname" . }}-{{.Values.Vault.ConsulClient.ComponentName}}
      - name: gossip-json
        secret:
          secretName: {{ template "fullname" . }}-consul-gossip-json
      - name: consul-unix-socket
        emptyDir: {}
      {{- if .Values.Vault.HostAliases }}
      - name: nsswitch
        configMap:
          name: {{ template "fullname" . }}-{{.Values.Vault.ComponentName}}
          items:
          - key: nsswitch.conf
            path: nsswitch.conf
      {{- end }}
